<?xml version="1.0" encoding="UTF-8"?>
<serviceDefinitions>
    <serviceDefinition>
        <service name="webhdfs" role="WEBHDFS" version="2.4.0">
            <dispatch classname="org.apache.knox.gateway.hdfs.dispatch.HdfsHttpClientDispatch" ha-classname="org.apache.knox.gateway.hdfs.dispatch.WebHdfsHaDispatch" use-two-way-ssl="false"/>
            <metadata>
                <context>/webhdfs</context>
                <description>An HTTP REST API which supports the complete FileSystem interface for HDFS.</description>
                <samples>
                    <sample>
                        <description>List all files under 'testPath'</description>
                        <method>GET</method>
                        <path>v1/testPath?op=LISTSTATUS</path>
                    </sample>
                    <sample>
                        <description>Rename a File/Directory under </description>
                        <method>PUT</method>
                        <path>v1/testPath/testFile?op=RENAME&amp;destination=testPath/renamedFile</path>
                    </sample>
                    <sample>
                        <description>Get Home Directory</description>
                        <method>GET</method>
                        <path>v1/?op=GETHOMEDIRECTORY</path>
                    </sample>
                    <sample>
                        <description>You may check out Apache WebHDFS's REST API documentation here</description>
                        <value>https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/WebHDFS.html</value>
                    </sample>
                </samples>
                <shortDesc>Web HDFS</shortDesc>
                <type>API</type>
            </metadata>
            <routes>
                <route path="/webhdfs/v1/?**">
                    <rewrite apply="WEBHDFS/webhdfs/inbound/namenode/root" to="request.url"/>
                </route>
                <route path="/webhdfs/v1/**?**">
                    <rewrite apply="WEBHDFS/webhdfs/inbound/namenode/file" to="request.url"/>
                    <rewrite apply="WEBHDFS/webhdfs/outbound/namenode/headers" to="response.headers"/>
                    <rewrite apply="WEBHDFS/webhdfs/outbound/namenode/headers" to="response.body"/>
                </route>
                <route path="/webhdfs/v1/~?**">
                    <rewrite apply="WEBHDFS/webhdfs/inbound/namenode/home" to="request.url"/>
                </route>
                <route path="/webhdfs/v1/~/**?**">
                    <rewrite apply="WEBHDFS/webhdfs/inbound/namenode/home/file" to="request.url"/>
                    <rewrite apply="WEBHDFS/webhdfs/outbound/namenode/headers" to="response.headers"/>
                </route>
                <route path="/webhdfs/data/v1/**?**">
                    <dispatch contributor-name="http-client" ha-classname="org.apache.knox.gateway.dispatch.DefaultDispatch" use-two-way-ssl="false"/>
                    <rewrite apply="WEBHDFS/webhdfs/inbound/datanode" to="request.url"/>
                </route>
            </routes>
            <testURLs>
                <testURL>/webhdfs/v1/?op=LISTSTATUS</testURL>
            </testURLs>
        </service>
        <rules>
            <rule dir="OUT" name="WEBHDFS/webhdfs/outbound" pattern="hdfs://*:*/{path=**}?{**}" scope="WEBHDFS">
                <rewrite template="{$frontend[url]}/webhdfs/v1/{path=**}?{**}"/>
            </rule>
            <rule dir="OUT" name="WEBHDFS/webhdfs/outbound" pattern="webhdfs://*:*/{path=**}?{**}">
                <rewrite template="{$frontend[url]}/webhdfs/v1/{path=**}?{**}"/>
            </rule>
            <rule dir="OUT" name="WEBHDFS/webhdfs/outbound/namenode/headers/location">
                <match pattern="{scheme}://{host}:{port}/{path=**}?{**}"/>
                <rewrite template="{$frontend[url]}/webhdfs/data/v1/{path=**}?{scheme}?host={$hostmap(host)}?{port}?{**}"/>
                <encrypt-query/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/hdfs" pattern="hdfs:/{path=**}?{**}">
                <rewrite template="{$serviceMappedUrl[NAMENODE]}/{path=**}?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/webhdfs" pattern="webhdfs:/{path=**}?{**}">
                <rewrite template="{$serviceUrl[WEBHDFS]}/{path=**}?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/root" pattern="*://*:*/**/webhdfs/{version}/?{**}">
                <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/file" pattern="*://*:*/**/webhdfs/{version}/{path=**}?{**}">
                <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/{path=**}?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/home" pattern="*://*:*/**/webhdfs/{version}/~?{**}">
                <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/user/{$username}?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/home/file" pattern="*://*:*/**/webhdfs/{version}/~/{path=**}?{**}">
                <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/user/{$username}/{path=**}?{**}"/>
            </rule>
            <rule dir="IN" name="WEBHDFS/webhdfs/inbound/datanode">
                <decrypt-query/>
                <match pattern="*://*:*/**/webhdfs/data/*/{path=**}?{scheme}?{host}?{port}?{**}"/>
                <rewrite template="{scheme}://{host}:{port}/{path=**}?{**}"/>
            </rule>
            <filter name="WEBHDFS/webhdfs/outbound/namenode/headers">
                <content type="application/x-http-headers">
                    <apply path="Location" rule="WEBHDFS/webhdfs/outbound/namenode/headers/location"/>
                </content>
                <content type="application/json">
                    <apply path="$.Location" rule="WEBHDFS/webhdfs/outbound/namenode/headers/location"/>
                </content>
            </filter>
        </rules>
    </serviceDefinition>
</serviceDefinitions>
